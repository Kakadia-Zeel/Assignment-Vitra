{"version":3,"sources":["components/Page1.jsx","components/Page2.jsx","App.js","reportWebVitals.js","index.js"],"names":["Page1","useState","amount","setAmount","people","setPeople","className","type","min","max","onChange","e","target","value","arr","data","filter","d","balance","parseFloat","substring","replace","length","map","p","name","email","_id","Page2","onClick","isActive","friends","f","id","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sudAwDeA,MArDf,WACI,MAA4BC,mBAAS,KAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA2BF,mBAAS,IAApC,mBAAOG,EAAP,KAAcC,EAAd,KAqBA,OACI,sBAAKC,UAAU,QAAf,UACI,wCACA,iCACI,0CACA,uBAAOC,KAAK,QAAQC,IAAI,OAAOC,IAAI,OAAOC,SAxB3B,SAACC,GACxBR,EAAUQ,EAAEC,OAAOC,OAEnB,IAAMC,EAAMC,EAAKC,QAAO,SAACC,GACrB,IAAIC,EAAUD,EAAEC,QAGpB,OAFIA,EAAUC,WAAWD,EAAQE,UAAU,GAAGC,QAAQ,IAAI,OAE9CV,EAAEC,OAAOC,SAOrBR,EAAUS,MAWF,0CACA,uBACA,sBAAKR,UAAU,YAAf,6BAA4CJ,KAC5B,IAAhBE,EAAOkB,OAAa,kCAChB,+BACG,sCACA,yCACA,0CAEFlB,EAAOmB,KAAI,SAAAC,GAAC,OAET,+BACI,6BAAKA,EAAEC,OACP,6BAAKD,EAAEN,UACP,6BAAKM,EAAEE,UAHFF,EAAEG,WAOT,qBAAKrB,UAAU,UAAf,oDCDXsB,MA9Cf,WACI,MAA2B3B,mBAAS,IAApC,mBAAOG,EAAP,KAAcC,EAAd,KAiBA,OACI,sBAAKC,UAAU,QAAf,UACI,wCACA,wBAAQuB,QAnBG,SAAClB,GAEhB,IAAMG,EAAMC,EAAKC,QAAO,SAACC,GACrB,IAAIC,EAAUD,EAAEC,QAGpB,OAFIA,EAAUC,WAAWD,EAAQE,UAAU,GAAGC,QAAQ,IAAI,MAE/C,MAAqB,IAAbJ,EAAEa,YAMrBzB,EAAUS,IAON,kCAEmB,IAAlBV,EAAOkB,OAAe,kCACf,+BACG,sCACA,yCACA,yCACA,6CAEFlB,EAAOmB,KAAI,SAAAC,GAAC,OAET,+BACI,6BAAKA,EAAEC,OACP,6BAAKD,EAAEN,UACP,6BAAKM,EAAEO,QAAQR,KAAI,SAAAS,GAAC,OAAE,4BAAeA,EAAEP,MAATO,EAAEC,SAChC,6BAAKT,EAAEM,SAAS,OAJXN,EAAEG,WAQR,SC/BZO,MATf,WACE,OACE,sBAAK5B,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCKS6B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0efffa07.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport data from '../people.json';\r\n\r\nfunction Page1() {\r\n    const [amount, setAmount] = useState(1000);\r\n    const [people,setPeople] = useState([]);\r\n\r\n    const handleAmountChange = (e) =>{\r\n        setAmount(e.target.value);\r\n        \r\n        const arr = data.filter((d) => {\r\n            let balance = d.balance;\r\n            balance = parseFloat(balance.substring(1).replace(',',''));\r\n            \r\n        if(balance<=e.target.value)\r\n            return true;\r\n        \r\n        else \r\n            return false;\r\n        })\r\n\r\n        setPeople(arr);\r\n    }\r\n\r\n   \r\n\r\n    return (\r\n        <div className=\"page1\">\r\n            <h1>Page 1</h1>\r\n            <form>\r\n                <span>$1,000</span>\r\n                <input type=\"range\" min=\"1000\" max=\"4000\" onChange={handleAmountChange}/>\r\n                <span>$4,000</span>\r\n                <br />\r\n                <div className=\"currValue\">Current Value: ${amount}</div>\r\n               {people.length!==0 ? <table>\r\n                    <tr>\r\n                       <th>Name</th>\r\n                       <th>Balance</th>\r\n                       <th>Email</th>\r\n                    </tr>\r\n                    {people.map(p=>\r\n\r\n                        <tr key={p._id}>\r\n                            <td>{p.name}</td>\r\n                            <td>{p.balance}</td>\r\n                            <td>{p.email}</td>\r\n                        </tr>\r\n                       \r\n                    )}\r\n                </table>: <div className=\"no-data\">No Data Available ðŸš© </div>}\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Page1\r\n","import React, { useState } from 'react'\r\nimport data from '../people.json';\r\n\r\nfunction Page2() {\r\n    const [people,setPeople] = useState([]);\r\n    const findPeople = (e) =>{\r\n\r\n        const arr = data.filter((d) => {\r\n            let balance = d.balance;\r\n            balance = parseFloat(balance.substring(1).replace(',',''));\r\n            \r\n        if(balance<2000 && d.isActive===false)\r\n            return true;\r\n        \r\n        return false;\r\n        })\r\n\r\n        setPeople(arr);\r\n    }\r\n\r\n    \r\n    return (\r\n        <div className=\"page2\">\r\n            <h1>Page 2</h1>\r\n            <button onClick={findPeople}>Click to get Results</button>\r\n\r\n            {people.length !== 0 ? <table>\r\n                    <tr>\r\n                       <th>Name</th>\r\n                       <th>Balance</th>\r\n                       <th>Friends</th>\r\n                       <th>isActive</th>\r\n                    </tr>\r\n                    {people.map(p=>\r\n\r\n                        <tr key={p._id}>\r\n                            <td>{p.name}</td>\r\n                            <td>{p.balance}</td>\r\n                            <td>{p.friends.map(f=><p key={f.id}>{f.name}</p>)}</td>\r\n                            <td>{p.isActive+\"\"}</td>\r\n                        </tr>\r\n                       \r\n                    )}\r\n                </table> : null}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Page2\r\n","import \"./App.css\";\nimport Page1 from \"./components/Page1\";\nimport Page2 from \"./components/Page2\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Page1 />\n      <Page2 />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}